{"ast":null,"code":"import _classCallCheck from \"/Users/yuseon/dev/js/shoppingCart/cart/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yuseon/dev/js/shoppingCart/cart/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yuseon/dev/js/shoppingCart/cart/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yuseon/dev/js/shoppingCart/cart/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yuseon/dev/js/shoppingCart/cart/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/yuseon/dev/js/shoppingCart/cart/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/yuseon/dev/js/shoppingCart/cart/src/Admin.js\";\nimport React, { Component } from 'react'; //import axios from 'axios';\n\nvar Products =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Products, _Component);\n\n  function Products(props) {\n    var _this;\n\n    _classCallCheck(this, Products);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Products).call(this, props));\n\n    _this.getProductData = function () {\n      fetch('http://localhost:8080/api/products').then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        _this.setState({\n          pdData: data\n        });\n      });\n    };\n\n    _this.addProduct = function () {};\n\n    _this.state = {\n      pdData: [],\n      pdId: '',\n      pdName: '',\n      pdUrl: '',\n      qty: 0,\n      price: 0,\n      desc: '',\n      intervalIsSet: false\n    };\n    _this.getProductData = _this.getProductData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addProduct = _this.addProduct.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateProduct = _this.updateProduct.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.delProduct = _this.delProduct.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } // fetch all existing data \n\n\n  _createClass(Products, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getProductData();\n\n      if (!this.state.intervalIsSet) {\n        var interval = setInterval(this.getProductData, 1000);\n        this.setState({\n          intervalIsSet: interval\n        });\n      }\n    } // always kill a process everytime we are done using it \n\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.state.intervalIsSet) {\n        clearInterval(this.state.intervalIsSet);\n        this.setState({\n          intervalIsSet: null\n        });\n      }\n    } // get Data from database \n\n  }, {\n    key: \"render\",\n    // update Product data to database\n    // delete Product data from database\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Products;\n}(Component);\n\nexport { Products as default };","map":{"version":3,"sources":["/Users/yuseon/dev/js/shoppingCart/cart/src/Admin.js"],"names":["React","Component","Products","props","getProductData","fetch","then","res","json","data","setState","pdData","addProduct","state","pdId","pdName","pdUrl","qty","price","desc","intervalIsSet","bind","updateProduct","delProduct","interval","setInterval","clearInterval"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;IAEqBC,Q;;;;;AACjB,oBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,kFAAMA,KAAN;;AADc,UAwClBC,cAxCkB,GAwCD,YAAM;AACnBC,MAAAA,KAAK,CAAC,oCAAD,CAAL,CACCC,IADD,CACM,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADT,EAECF,IAFD,CAEM,UAAAG,IAAI,EAAI;AACV,cAAKC,QAAL,CAAc;AACVC,UAAAA,MAAM,EAAEF;AADE,SAAd;AAGH,OAND;AAOH,KAhDiB;;AAAA,UAmDlBG,UAnDkB,GAmDL,YAAM,CAElB,CArDiB;;AAEd,UAAKC,KAAL,GAAa;AACTF,MAAAA,MAAM,EAAE,EADC;AAETG,MAAAA,IAAI,EAAE,EAFG;AAGTC,MAAAA,MAAM,EAAE,EAHC;AAITC,MAAAA,KAAK,EAAE,EAJE;AAKTC,MAAAA,GAAG,EAAE,CALI;AAMTC,MAAAA,KAAK,EAAE,CANE;AAOTC,MAAAA,IAAI,EAAE,EAPG;AAQTC,MAAAA,aAAa,EAAE;AARN,KAAb;AAUA,UAAKhB,cAAL,GAAsB,MAAKA,cAAL,CAAoBiB,IAApB,uDAAtB;AACA,UAAKT,UAAL,GAAkB,MAAKA,UAAL,CAAgBS,IAAhB,uDAAlB;AACA,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBD,IAAnB,uDAArB;AACA,UAAKE,UAAL,GAAkB,MAAKA,UAAL,CAAgBF,IAAhB,uDAAlB;AAfc;AAgBjB,G,CAED;;;;;wCACoB;AAChB,WAAKjB,cAAL;;AACA,UAAG,CAAC,KAAKS,KAAL,CAAWO,aAAf,EAA8B;AAC1B,YAAII,QAAQ,GAAGC,WAAW,CAAC,KAAKrB,cAAN,EAAsB,IAAtB,CAA1B;AACA,aAAKM,QAAL,CAAc;AACVU,UAAAA,aAAa,EAAEI;AADL,SAAd;AAGH;AACJ,K,CAED;;;;2CACuB;AACnB,UAAG,KAAKX,KAAL,CAAWO,aAAd,EAA4B;AACxBM,QAAAA,aAAa,CAAC,KAAKb,KAAL,CAAWO,aAAZ,CAAb;AACA,aAAKV,QAAL,CAAc;AACVU,UAAAA,aAAa,EAAE;AADL,SAAd;AAGH;AACJ,K,CAED;;;;AAeA;AAEA;6BAES;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAKH;;;;EAjEiCnB,S;;SAAjBC,Q","sourcesContent":["import React, { Component } from 'react';\n//import axios from 'axios';\n\nexport default class Products extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            pdData: [],\n            pdId: '',\n            pdName: '',\n            pdUrl: '',\n            qty: 0,\n            price: 0,\n            desc: '',\n            intervalIsSet: false\n        }\n        this.getProductData = this.getProductData.bind(this);\n        this.addProduct = this.addProduct.bind(this);\n        this.updateProduct = this.updateProduct.bind(this);\n        this.delProduct = this.delProduct.bind(this);\n    }\n\n    // fetch all existing data \n    componentDidMount() {\n        this.getProductData();\n        if(!this.state.intervalIsSet) {\n            let interval = setInterval(this.getProductData, 1000);\n            this.setState({\n                intervalIsSet: interval\n            });\n        }\n    }\n\n    // always kill a process everytime we are done using it \n    componentWillUnmount() {\n        if(this.state.intervalIsSet){\n            clearInterval(this.state.intervalIsSet);\n            this.setState({\n                intervalIsSet: null\n            });\n        }\n    }\n\n    // get Data from database \n    getProductData = () => {\n        fetch('http://localhost:8080/api/products')\n        .then(res => res.json())\n        .then(data => {\n            this.setState({\n                pdData: data\n            })\n        });\n    };\n\n    // add Product data to databasse\n    addProduct = () => {\n      \n    }\n    // update Product data to database\n\n    // delete Product data from database\n\n    render() {\n        return (\n            <div>\n\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}