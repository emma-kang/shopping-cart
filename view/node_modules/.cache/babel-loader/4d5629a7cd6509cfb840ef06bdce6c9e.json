{"ast":null,"code":"import _defineProperty from \"/Users/yuseon/dev/js/shoppingCart/view/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/yuseon/dev/js/shoppingCart/view/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/yuseon/dev/js/shoppingCart/view/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yuseon/dev/js/shoppingCart/view/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yuseon/dev/js/shoppingCart/view/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yuseon/dev/js/shoppingCart/view/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/yuseon/dev/js/shoppingCart/view/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/yuseon/dev/js/shoppingCart/view/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yuseon/dev/js/shoppingCart/view/src/Admin.js\";\n\n/** Administrator mode page */\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nvar Admin =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Admin, _Component);\n\n  function Admin(props) {\n    var _this;\n\n    _classCallCheck(this, Admin);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Admin).call(this, props));\n\n    _this.getProductData = function () {\n      fetch('http://localhost:8080/api/products').then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        _this.setState({\n          pdData: data\n        });\n      });\n    };\n\n    _this.addProduct = function (e) {\n      axios.post('http://localhost:8080/api/products', {\n        id: _this.state.form.pdId,\n        name: _this.state.form.pdName,\n        picURL: _this.state.form.pdUrl,\n        quantity: _this.state.form.qty,\n        price: _this.state.form.price,\n        description: _this.state.form.desc\n      }).then(function (res) {\n        console.log(res);\n      }).catch(function (err) {\n        console.log(err);\n      });\n      e.preventDefault();\n    };\n\n    _this.updateProduct = function (objId) {};\n\n    _this.delProduct = function (product) {\n      axios.delete('http://localhost:8080/api/products/', {\n        params: {\n          pdId: product\n        }\n      }).then(function (res) {\n        console.log(res);\n      }).catch(function (err) {\n        console.log(err);\n      });\n    };\n\n    _this.handleChange = function (e) {\n      var target = e.target;\n      var name = target.name;\n      var value = target.value; // ...this.state.form to prevent warning controlled or uncontrolled text input\n\n      _this.setState({\n        form: _objectSpread({}, _this.state.form, _defineProperty({}, name, value))\n      });\n    };\n\n    _this.handleClick = function (e) {\n      var obj = e.target.value;\n\n      _this.setState({\n        objId: obj\n      });\n    };\n\n    _this.state = {\n      pdData: [],\n      objId: '',\n      form: {\n        pdId: '',\n        pdName: '',\n        pdUrl: '',\n        qty: 0,\n        price: 0,\n        desc: ''\n      },\n      intervalIsSet: false\n    };\n    _this.getProductData = _this.getProductData.bind(_assertThisInitialized(_this));\n    _this.addProduct = _this.addProduct.bind(_assertThisInitialized(_this));\n    _this.updateProduct = _this.updateProduct.bind(_assertThisInitialized(_this));\n    _this.delProduct = _this.delProduct.bind(_assertThisInitialized(_this));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_this));\n    return _this;\n  } // fetch all existing data \n\n\n  _createClass(Admin, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getProductData();\n\n      if (!this.state.intervalIsSet) {\n        var interval = setInterval(this.getProductData, 1000);\n        this.setState({\n          intervalIsSet: interval\n        });\n      }\n    } // always kill a process everytime we are done using it \n\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.state.intervalIsSet) {\n        clearInterval(this.state.intervalIsSet);\n        this.setState({\n          intervalIsSet: null\n        });\n      }\n    } // get all Data from database \n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var pdList = this.state.pdData.map(function (el, index) {\n        return React.createElement(\"div\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, \"Id: \", el.id, \", name: \", el.name, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn btn-secondary\",\n          value: el._id,\n          onClick: _this2.handleClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, \"Select\")), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn btn-danger\",\n          onClick: function onClick() {\n            return _this2.delProduct(el._id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, \"Delete\")));\n      });\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.addProduct,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"product-id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"Product Id\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        \"aria-describedby\": \"id-help\",\n        name: \"pdId\",\n        value: this.state.form.pdId,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), React.createElement(\"small\", {\n        id: \"id-help\",\n        className: \"form-text text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Must be integer\")), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"product-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Product Name\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"pdName\",\n        value: this.state.form.pdName,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"product-pic\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Photo URL\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"pdUrl\",\n        value: this.state.form.pdUrl,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"product-qty\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Qty\"), React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control\",\n        name: \"qty\",\n        value: this.state.form.qty,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"product-price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"Price\"), React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control\",\n        name: \"price\",\n        value: this.state.form.price,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"product-desc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Description\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"desc\",\n        value: this.state.form.desc,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Add\"))), React.createElement(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, pdList)));\n    }\n  }]);\n\n  return Admin;\n}(Component);\n\nexport { Admin as default };","map":{"version":3,"sources":["/Users/yuseon/dev/js/shoppingCart/view/src/Admin.js"],"names":["React","Component","axios","Admin","props","getProductData","fetch","then","res","json","data","setState","pdData","addProduct","e","post","id","state","form","pdId","name","pdName","picURL","pdUrl","quantity","qty","price","description","desc","console","log","catch","err","preventDefault","updateProduct","objId","delProduct","product","delete","params","handleChange","target","value","handleClick","obj","intervalIsSet","bind","interval","setInterval","clearInterval","pdList","map","el","index","_id"],"mappings":"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","sourcesContent":["/** Administrator mode page */\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nexport default class Admin extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            pdData: [],\n            objId: '',\n            form: {\n                pdId: '',\n                pdName: '',\n                pdUrl: '',\n                qty: 0,\n                price: 0,\n                desc: ''\n            },\n            intervalIsSet: false\n        }\n\n        this.getProductData = this.getProductData.bind(this);\n        this.addProduct = this.addProduct.bind(this);\n        this.updateProduct = this.updateProduct.bind(this);\n        this.delProduct = this.delProduct.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    // fetch all existing data \n    componentDidMount() {\n        this.getProductData();\n        if(!this.state.intervalIsSet) {\n            let interval = setInterval(this.getProductData, 1000);\n            this.setState({\n                intervalIsSet: interval\n            });\n        }\n    }\n\n    // always kill a process everytime we are done using it \n    componentWillUnmount() {\n        if(this.state.intervalIsSet){\n            clearInterval(this.state.intervalIsSet);\n            this.setState({\n                intervalIsSet: null\n            });\n        }\n    }\n\n    // get all Data from database \n    getProductData = () => {\n        fetch('http://localhost:8080/api/products')\n        .then(res => res.json())\n        .then(data => {\n            this.setState({\n                pdData: data\n            })\n        });\n    };\n\n    // add Product data to databasse\n    addProduct = (e) => {\n        \n      axios.post('http://localhost:8080/api/products', {\n          id: this.state.form.pdId,\n          name: this.state.form.pdName,\n          picURL: this.state.form.pdUrl,\n          quantity: this.state.form.qty,\n          price: this.state.form.price,\n          description: this.state.form.desc\n      }).then((res) => {\n          console.log(res);\n      }).catch((err) => {\n          console.log(err);\n      })\n      \n      e.preventDefault();\n    }\n\n    // update Product data to database\n    updateProduct = (objId) => {\n\n    }\n    // delete Product data from database\n    delProduct = (product) => {\n\n        axios.delete('http://localhost:8080/api/products/', {\n            params: {\n                pdId: product\n            }\n        }).then((res) => {\n            console.log(res);\n        }).catch((err) => {\n            console.log(err);\n        })\n    }\n\n    handleChange = (e) => {\n        const target = e.target;\n        const name = target.name; \n        const value = target.value;\n        \n        // ...this.state.form to prevent warning controlled or uncontrolled text input\n        this.setState({\n            form: {\n                ...this.state.form,\n                [name]: value \n            }\n        });\n    } \n\n    handleClick = (e) => {\n        const obj = e.target.value;\n\n        this.setState({\n            objId: obj\n        })\n\n    }\n\n    render() {\n        let pdList = this.state.pdData.map((el, index) => {\n            return <div key={index}>Id: {el.id}, name: {el.name} \n                <span><button className=\"btn btn-secondary\" value={el._id} onClick={this.handleClick}>Select</button></span>\n                <span><button className=\"btn btn-danger\" onClick={() => this.delProduct(el._id)}>Delete</button></span>\n                </div>\n        });\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-6\">\n                        {/* input name and state key name should be same  */}\n                        <form onSubmit={this.addProduct}>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"product-id\">Product Id</label>\n                                <input type=\"text\" className=\"form-control\" aria-describedby=\"id-help\" name=\"pdId\" value={this.state.form.pdId} onChange={this.handleChange}/>\n                                <small id=\"id-help\" className=\"form-text text-muted\">Must be integer</small>\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"product-name\">Product Name</label> \n                                <input type=\"text\" className=\"form-control\" name=\"pdName\" value={this.state.form.pdName} onChange={this.handleChange} />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"product-pic\">Photo URL</label>\n                                <input type=\"text\" className=\"form-control\" name=\"pdUrl\" value={this.state.form.pdUrl} onChange={this.handleChange}/>\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"product-qty\">Qty</label> \n                                <input type=\"number\" className=\"form-control\" name=\"qty\" value={this.state.form.qty} onChange={this.handleChange} />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"product-price\">Price</label> \n                                <input type=\"number\" className=\"form-control\" name=\"price\" value={this.state.form.price} onChange={this.handleChange} />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"product-desc\">Description</label>          \n                                <input type=\"text\" className=\"form-control\" name=\"desc\" value={this.state.form.desc} onChange={this.handleChange}/>\n                            </div>\n                            <button className=\"btn btn-primary\" type=\"submit\">Add</button>\n                        </form>\n                    </div>\n                    <div className=\"col-6\">\n                    {pdList}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}