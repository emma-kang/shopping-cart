{"ast":null,"code":"import _classCallCheck from \"/Users/yuseon/dev/js/shoppingCart/view/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yuseon/dev/js/shoppingCart/view/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yuseon/dev/js/shoppingCart/view/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yuseon/dev/js/shoppingCart/view/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/yuseon/dev/js/shoppingCart/view/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/yuseon/dev/js/shoppingCart/view/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yuseon/dev/js/shoppingCart/view/src/Admin.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nvar Products =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Products, _Component);\n\n  function Products(props) {\n    var _this;\n\n    _classCallCheck(this, Products);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Products).call(this, props));\n\n    _this.getProductData = function () {\n      fetch('http://localhost:8080/api/products').then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        _this.setState({\n          pdData: data\n        });\n      });\n    };\n\n    _this.handleSubmit = function () {};\n\n    _this.addProduct = function () {};\n\n    _this.updateProduct = function () {};\n\n    _this.delProduct = function () {};\n\n    _this.state = {\n      pdData: [],\n      pdId: '',\n      pdName: '',\n      pdUrl: '',\n      qty: 0,\n      price: 0,\n      desc: '',\n      intervalIsSet: false\n    };\n    _this.getProductData = _this.getProductData.bind(_assertThisInitialized(_this));\n    _this.addProduct = _this.addProduct.bind(_assertThisInitialized(_this));\n    _this.updateProduct = _this.updateProduct.bind(_assertThisInitialized(_this));\n    _this.delProduct = _this.delProduct.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  } // fetch all existing data \n\n\n  _createClass(Products, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getProductData();\n\n      if (!this.state.intervalIsSet) {\n        var interval = setInterval(this.getProductData, 1000);\n        this.setState({\n          intervalIsSet: interval\n        });\n      }\n    } // always kill a process everytime we are done using it \n\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.state.intervalIsSet) {\n        clearInterval(this.state.intervalIsSet);\n        this.setState({\n          intervalIsSet: null\n        });\n      }\n    } // get all Data from database \n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Id:\", React.createElement(\"input\", {\n        type: \"text\",\n        name: \"pdId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), \"Name:\", React.createElement(\"input\", {\n        type: \"text\",\n        name: \"pdName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), \"photo URL:\", React.createElement(\"input\", {\n        type: \"text\",\n        name: \"picUrl\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), \"Qty:\", React.createElement(\"input\", {\n        type: \"number\",\n        name: \"quantity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), \"Price:\", React.createElement(\"input\", {\n        type: \"number\",\n        name: \"price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), \"Description:\", React.createElement(\"input\", {\n        type: \"text\",\n        name: \"desc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Add\")));\n    }\n  }]);\n\n  return Products;\n}(Component);\n\nexport { Products as default };","map":{"version":3,"sources":["/Users/yuseon/dev/js/shoppingCart/view/src/Admin.js"],"names":["React","Component","axios","Products","props","getProductData","fetch","then","res","json","data","setState","pdData","handleSubmit","addProduct","updateProduct","delProduct","state","pdId","pdName","pdUrl","qty","price","desc","intervalIsSet","bind","interval","setInterval","clearInterval"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAEqBC,Q;;;;;AACjB,oBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,kFAAMA,KAAN;;AADc,UAyClBC,cAzCkB,GAyCD,YAAM;AACnBC,MAAAA,KAAK,CAAC,oCAAD,CAAL,CACCC,IADD,CACM,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADT,EAECF,IAFD,CAEM,UAAAG,IAAI,EAAI;AACV,cAAKC,QAAL,CAAc;AACVC,UAAAA,MAAM,EAAEF;AADE,SAAd;AAGH,OAND;AAOH,KAjDiB;;AAAA,UAmDlBG,YAnDkB,GAmDH,YAAM,CAEpB,CArDiB;;AAAA,UAwDlBC,UAxDkB,GAwDL,YAAM,CAElB,CA1DiB;;AAAA,UA4DlBC,aA5DkB,GA4DF,YAAM,CAErB,CA9DiB;;AAAA,UAgElBC,UAhEkB,GAgEL,YAAM,CAElB,CAlEiB;;AAEd,UAAKC,KAAL,GAAa;AACTL,MAAAA,MAAM,EAAE,EADC;AAETM,MAAAA,IAAI,EAAE,EAFG;AAGTC,MAAAA,MAAM,EAAE,EAHC;AAITC,MAAAA,KAAK,EAAE,EAJE;AAKTC,MAAAA,GAAG,EAAE,CALI;AAMTC,MAAAA,KAAK,EAAE,CANE;AAOTC,MAAAA,IAAI,EAAE,EAPG;AAQTC,MAAAA,aAAa,EAAE;AARN,KAAb;AAUA,UAAKnB,cAAL,GAAsB,MAAKA,cAAL,CAAoBoB,IAApB,+BAAtB;AACA,UAAKX,UAAL,GAAkB,MAAKA,UAAL,CAAgBW,IAAhB,+BAAlB;AACA,UAAKV,aAAL,GAAqB,MAAKA,aAAL,CAAmBU,IAAnB,+BAArB;AACA,UAAKT,UAAL,GAAkB,MAAKA,UAAL,CAAgBS,IAAhB,+BAAlB;AACA,UAAKZ,YAAL,GAAoB,MAAKA,YAAL,CAAkBY,IAAlB,+BAApB;AAhBc;AAiBjB,G,CAED;;;;;wCACoB;AAChB,WAAKpB,cAAL;;AACA,UAAG,CAAC,KAAKY,KAAL,CAAWO,aAAf,EAA8B;AAC1B,YAAIE,QAAQ,GAAGC,WAAW,CAAC,KAAKtB,cAAN,EAAsB,IAAtB,CAA1B;AACA,aAAKM,QAAL,CAAc;AACVa,UAAAA,aAAa,EAAEE;AADL,SAAd;AAGH;AACJ,K,CAED;;;;2CACuB;AACnB,UAAG,KAAKT,KAAL,CAAWO,aAAd,EAA4B;AACxBI,QAAAA,aAAa,CAAC,KAAKX,KAAL,CAAWO,aAAZ,CAAb;AACA,aAAKb,QAAL,CAAc;AACVa,UAAAA,aAAa,EAAE;AADL,SAAd;AAGH;AACJ,K,CAED;;;;6BA4BS;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,QAAQ,EAAE,KAAKX,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,WAII;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,gBAMI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,UAQI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARJ,YAUI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVJ,kBAYI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZJ,EAaI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAbJ,CADJ,CADJ;AAmBH;;;;EAzFiCZ,S;;SAAjBE,Q","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nexport default class Products extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            pdData: [],\n            pdId: '',\n            pdName: '',\n            pdUrl: '',\n            qty: 0,\n            price: 0,\n            desc: '',\n            intervalIsSet: false\n        }\n        this.getProductData = this.getProductData.bind(this);\n        this.addProduct = this.addProduct.bind(this);\n        this.updateProduct = this.updateProduct.bind(this);\n        this.delProduct = this.delProduct.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    // fetch all existing data \n    componentDidMount() {\n        this.getProductData();\n        if(!this.state.intervalIsSet) {\n            let interval = setInterval(this.getProductData, 1000);\n            this.setState({\n                intervalIsSet: interval\n            });\n        }\n    }\n\n    // always kill a process everytime we are done using it \n    componentWillUnmount() {\n        if(this.state.intervalIsSet){\n            clearInterval(this.state.intervalIsSet);\n            this.setState({\n                intervalIsSet: null\n            });\n        }\n    }\n\n    // get all Data from database \n    getProductData = () => {\n        fetch('http://localhost:8080/api/products')\n        .then(res => res.json())\n        .then(data => {\n            this.setState({\n                pdData: data\n            })\n        });\n    };\n\n    handleSubmit = () => {\n        \n    }\n\n    // add Product data to databasse\n    addProduct = () => {\n      \n    }\n    // update Product data to database\n    updateProduct = () => {\n\n    }\n    // delete Product data from database\n    delProduct = () => {\n\n    }\n\n    render() {\n        return (\n            <div>\n                <form onSubmit={this.handleSubmit}>\n                    Id: \n                    <input type=\"text\" name=\"pdId\" />\n                    Name: \n                    <input type=\"text\" name=\"pdName\" />\n                    photo URL:\n                    <input type=\"text\" name=\"picUrl\" />\n                    Qty: \n                    <input type=\"number\" name=\"quantity\" />\n                    Price: \n                    <input type=\"number\" name=\"price\" />\n                    Description: \n                    <input type=\"text\" name=\"desc\" />\n                    <button type=\"submit\">Add</button>\n                </form>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}