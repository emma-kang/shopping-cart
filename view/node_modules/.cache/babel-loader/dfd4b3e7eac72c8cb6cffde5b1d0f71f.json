{"ast":null,"code":"import _defineProperty from \"/Users/yuseon/dev/js/shoppingCart/view/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/yuseon/dev/js/shoppingCart/view/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yuseon/dev/js/shoppingCart/view/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yuseon/dev/js/shoppingCart/view/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yuseon/dev/js/shoppingCart/view/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/yuseon/dev/js/shoppingCart/view/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/yuseon/dev/js/shoppingCart/view/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/yuseon/dev/js/shoppingCart/view/src/Admin.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nvar Admin =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Admin, _Component);\n\n  function Admin(props) {\n    var _this;\n\n    _classCallCheck(this, Admin);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Admin).call(this, props));\n\n    _this.getProductData = function () {\n      fetch('http://localhost:8080/api/products').then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        _this.setState({\n          pdData: data\n        });\n      });\n    };\n\n    _this.handleChange = function (e) {\n      var name = e.target.name;\n      var value = e.target.value;\n\n      _this.setState({\n        form: _defineProperty({}, name, value)\n      });\n    };\n\n    _this.addProduct = function () {\n      axios.post('http://localhost:8080/api/products', {\n        id: _this.state.form.pdId,\n        name: _this.state.form.pdName,\n        picURL: _this.state.form.pdUrl,\n        quantity: _this.state.form.qty,\n        price: _this.state.form.price,\n        description: _this.state.form.desc\n      }).then(function (res) {\n        console.log(res);\n      }).catch(function (err) {\n        console.log(err);\n      });\n    };\n\n    _this.updateProduct = function () {};\n\n    _this.delProduct = function () {};\n\n    _this.state = {\n      pdData: [],\n      form: {\n        pdId: '',\n        pdName: '',\n        pdUrl: '',\n        qty: 0,\n        price: 0,\n        desc: ''\n      },\n      intervalIsSet: false\n    };\n    _this.getProductData = _this.getProductData.bind(_assertThisInitialized(_this));\n    _this.addProduct = _this.addProduct.bind(_assertThisInitialized(_this));\n    _this.updateProduct = _this.updateProduct.bind(_assertThisInitialized(_this));\n    _this.delProduct = _this.delProduct.bind(_assertThisInitialized(_this));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    return _this;\n  } // fetch all existing data \n\n\n  _createClass(Admin, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getProductData();\n\n      if (!this.state.intervalIsSet) {\n        var interval = setInterval(this.getProductData, 1000);\n        this.setState({\n          intervalIsSet: interval\n        });\n      }\n    } // always kill a process everytime we are done using it \n\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.state.intervalIsSet) {\n        clearInterval(this.state.intervalIsSet);\n        this.setState({\n          intervalIsSet: null\n        });\n      }\n    } // get all Data from database \n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.addProduct,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"product-id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Product Id\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        \"aria-describedby\": \"id-help\",\n        name: \"pdId\",\n        value: this.state.form.pdId.value,\n        onChange: this.handleChange,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(\"small\", {\n        id: \"id-help\",\n        className: \"form-text text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Must be integer\")), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"product-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Product Name\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"pdName\",\n        value: this.state.form.pdName.value,\n        onChange: this.handleChange,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"product-pic\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Photo URL\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"pdUrl\",\n        value: this.state.form.pdUrl.value,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"product-qty\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Qty\"), React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control\",\n        name: \"qty\",\n        value: this.state.form.qty.value,\n        onChange: this.handleChange,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"product-price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Price\"), React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control\",\n        name: \"price\",\n        value: this.state.form.price.value,\n        onChange: this.handleChange,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"product-desc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Description\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"desc\",\n        value: this.state.form.desc.value,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Add\")));\n    }\n  }]);\n\n  return Admin;\n}(Component);\n\nexport { Admin as default };","map":{"version":3,"sources":["/Users/yuseon/dev/js/shoppingCart/view/src/Admin.js"],"names":["React","Component","axios","Admin","props","getProductData","fetch","then","res","json","data","setState","pdData","handleChange","e","name","target","value","form","addProduct","post","id","state","pdId","pdName","picURL","pdUrl","quantity","qty","price","description","desc","console","log","catch","err","updateProduct","delProduct","intervalIsSet","bind","interval","setInterval","clearInterval"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nexport default class Admin extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            pdData: [],\n            form: {\n                pdId: '',\n                pdName: '',\n                pdUrl: '',\n                qty: 0,\n                price: 0,\n                desc: ''\n            },\n            intervalIsSet: false\n        }\n        this.getProductData = this.getProductData.bind(this);\n        this.addProduct = this.addProduct.bind(this);\n        this.updateProduct = this.updateProduct.bind(this);\n        this.delProduct = this.delProduct.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    // fetch all existing data \n    componentDidMount() {\n        this.getProductData();\n        if(!this.state.intervalIsSet) {\n            let interval = setInterval(this.getProductData, 1000);\n            this.setState({\n                intervalIsSet: interval\n            });\n        }\n    }\n\n    // always kill a process everytime we are done using it \n    componentWillUnmount() {\n        if(this.state.intervalIsSet){\n            clearInterval(this.state.intervalIsSet);\n            this.setState({\n                intervalIsSet: null\n            });\n        }\n    }\n\n    // get all Data from database \n    getProductData = () => {\n        fetch('http://localhost:8080/api/products')\n        .then(res => res.json())\n        .then(data => {\n            this.setState({\n                pdData: data\n            })\n        });\n    };\n\n    handleChange = (e) => {\n        const name = e.target.name;\n        const value = e.target.value;\n\n        this.setState({\n            form: {\n                [name]: value\n            }\n        });\n    } \n\n    // add Product data to databasse\n    addProduct = () => {\n      axios.post('http://localhost:8080/api/products', {\n          id: this.state.form.pdId,\n          name: this.state.form.pdName,\n          picURL: this.state.form.pdUrl,\n          quantity: this.state.form.qty,\n          price: this.state.form.price,\n          description: this.state.form.desc\n      }).then((res) => {\n          console.log(res);\n      }).catch((err) => {\n          console.log(err);\n      })\n    }\n    // update Product data to database\n    updateProduct = () => {\n\n    }\n    // delete Product data from database\n    delProduct = () => {\n\n    }\n\n    render() {\n        return (\n            <div>\n                {/* input name and state key name should be same  */}\n                <form onSubmit={this.addProduct}>\n                    <div className=\"form-group\">\n                        <label for=\"product-id\">Product Id</label>\n                        <input type=\"text\" className=\"form-control\" aria-describedby=\"id-help\" name=\"pdId\" value={this.state.form.pdId.value} onChange={this.handleChange} required/>\n                        <small id=\"id-help\" className=\"form-text text-muted\">Must be integer</small>\n                    </div>\n                    <div className=\"form-group\">\n                        <label for=\"product-name\">Product Name</label> \n                        <input type=\"text\" className=\"form-control\" name=\"pdName\" value={this.state.form.pdName.value} onChange={this.handleChange} required/>\n                    </div>\n                    <div className=\"form-group\">\n                        <label for=\"product-pic\">Photo URL</label>\n                        <input type=\"text\" className=\"form-control\" name=\"pdUrl\" value={this.state.form.pdUrl.value} onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"form-group\">\n                        <label for=\"product-qty\">Qty</label> \n                        <input type=\"number\" className=\"form-control\" name=\"qty\" value={this.state.form.qty.value} onChange={this.handleChange} required/>\n                    </div>\n                    <div className=\"form-group\">\n                        <label for=\"product-price\">Price</label> \n                        <input type=\"number\" className=\"form-control\" name=\"price\" value={this.state.form.price.value} onChange={this.handleChange} required/>\n                    </div>\n                   <div className=\"form-group\">\n                        <label for=\"product-desc\">Description</label>          \n                        <input type=\"text\" className=\"form-control\" name=\"desc\" value={this.state.form.desc.value} onChange={this.handleChange}/>\n                   </div>\n                    <button className=\"btn btn-primary\" type=\"submit\">Add</button>\n                </form>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}